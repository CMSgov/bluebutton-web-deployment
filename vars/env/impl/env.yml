---
# File: env.yml 
# Created: 4/4/17
# Environment specific variables
# IMPL

### ami-release
env_ami_release: "2017-05-11"

### Environment:
env_env: "impl"
env_vpc_lower: "{{ env_env|lower }}"
env_vpc_upper: "{{ env_env|upper"

env_python_ver: "3.6"
env_python_ver_full: "{{ env_python_ver }}.1"
env_mod_wsgi_ver_full: "4.5.15"

# Remote user access account
env_remote_user_account: "{{ vault_env_remote_user_account }}"

### DJANGO_SECRET_KEY:
# 8 Character Prefix and Suffix
# Relate Suffix to Deployment Environment
env_secret_pfx: "BBOAUTH2"
env_secret_sfx: "{{ env_vpc_upper }}"
# 50 character Random Key
# http://www.miniwebtool.com/django-secret-key-generator/
env_rand_secret: "{{ vault_env_rand_secret }}"
env_django_secret_key: "{{ env_secret_pfx }}{{ env_rand_secret }}{{ env_secret_sfx }}"

# the git repository URL for the project
# project_repo: git@github.com:transparenthealth/hhs_oauth_server.git
env_project_repo: "https://github.com/transparenthealth/hhs_oauth_server.git"

# git branch to deploy
env_git_branch: "develop"

# Settings Module:
# e.g. hhs_oauth_server.settings.aws-[ dev | test | impl | prod]
env_django_settings_module: "{{ vault_env_django_settings_module }}"

# Project Parent Dir
# the base path to install to. You should not need to change this.
# git installs the repo in a folder beneath this path
# slash terminated folder definition
env_project_parent: "/var/pyapps/"
# The directory that virtualenv is created in and git is cloned into
  # eg. /var/virtualenv/hhs_o_server and /var/pyapps/hhs_o_server
env_project_dir: "hhs_o_server"

# Virtual Environment base location - slash terminated
env_venv: "/var/virtualenv/"

# The value of your django project's STATIC_ROOT settings.
# This will be the directory that django's `collectstatic` management command
# copies static files to, and it must be an absolute path. The default value
# here assumes that STATIC_ROOT is set in your settings.py like so:
# STATIC_ROOT = os.path.abspath(os.path.join(BASE_DIR, 'static'))
# relative directory from BASE_DIR.
# Recommend using default "static"
# env_static_root_dir: "static"
env_static_root_dir: "static"

### External Internet Domain Name for the platform
## DEV:
env_external_dns_name: "impl.bluebutton.cms.fhirservice.net"

### TransparentHealthServer default settings:
## MiHIN TestServer:
env_ths_fhir_server: "http://52.72.172.54:8080"
env_ths_fhir_path: "/fhir"
env_ths_fhir_rel: "/baseDstu2"
env_ths_fhir_rewrite_to: "https://{{ env_external_dns_name }}/bluebutton/fhir/v1"
env_ths_fhir_rewrite_from: "[\"{{ env_ths_fhir_server}}{{ env_ths_fhir_path}}{{ env_ths_fhir_rel }}\",]"

### HOSTNAME_URL:
env_host_url: "{{ env_external_dns_name }}"

### Email configuration - AWS SES
# email backend options are:
# django_email_backend:  'django.core.mail.backends.smtp.EmailBackend'
# django_email_backend:  'django.core.mail.backends.filebased.EmailBackend'
# django_email_backend:  'django.core.mail.backends.locmem.EmailBackend'
# django_email_backend:  'django.core.mail.backends.dummy.EmailBackend'
# django_email_backend:  'django_ses.SESBackend'

env_django_email_backend: "django_ses.SESBackend"

env_django_email_region: "us-east-1"
env_django_email_ses_endpoint: "email.us-east-1.amazonaws.com"
env_django_from_email: "bluebutton.impl@fhirservice.net"

### S3 Bucket Settings:
## IMPL
env_s3_bucket_account: "{{ vault_env_s3_bucket_account }}"
env_aws_access_id: "{{ vault_env_aws_access_id }}"
env_aws_secret_key: "{{ vault_env_aws_secret_key }}"
env_s3_storage_bucket_name: "{{ vault_env_s3_storage_bucket_name }}"

### Django Settings:
##  DJANGO_ORGANIZATION_NAME='{{ django_org_name }}'
##  DJANGO_APPLICATION_TITLE='{{ django_app_title }}'
## DEV | TEST | IMPL:
env_django_org_name: "CMS Medicare Blue Button[{{ env_vpc_upper }}]"
env_django_app_title: "CMS Blue Button API[{{ env_vpc_upper }}]"

# dev: vpc-80bdc3e7, impl: vpc-5fd4de38, test: vpc-5d5a163a, prod: vpc-9b3fc9fd
env_cf_vpc_id: "vpc-5fd4de38"
env_cf_platform_version: "02"

### Database Settings:
## Postgresql 9.6
## export RDS_DB_PLATFORM='postgres'
## export RDS_DB_ENGINE='django.db.backends.postgresql_psycopg2'
## export RDS_DB_NAME='something_secret'
## export RDS_USERNAME='some_user'
## export RDS_PASSWORD='super_secret_password'
## export RDS_HOSTNAME='some.ip.or.dns.name'
## export RDS_PORT='5432'
### Database Access String Construction: postgres://USER:PASSWORD@HOST:PORT/NAME
## export DEFAULT_DB_SET="$RDS_DB_PLATFORM://$RDS_USERNAME:$RDS_PASSWORD@$RDS_HOSTNAME:$RDS_PORT/$RDS_DB_NAME"
env_db_platform_type: "postgres"
env_db_engine_driver: "django.db.backends.postgresql_psycopg2"
env_db_name: "{{ vault_env_db_name }}"
env_db_user_name: "{{ vault_env_db_user_name }}"
env_db_user_pw: "{{ vault_env_db_user_pw }}"
env_db_host_address: "{{ hostvars[groups['dbservers'][0]]['inventory_hostname'] }}  ## "10.246.44.105"
env_db_host_port: "15432"

# sg-50deff2f: BB-SG-DEV-DATA-ALLZONE, sg-d3ac8dac: BB-SG-IMPL-DATA-ALLZONE
# sg-6892b317: BB-SG-PROD-DATA-ALLZONE, sg-feaa8b81: BB-SG-TEST-DATA-ALLZONES
env_cf_data_sg_data_zone_id: "sg-d3ac8dac"
env_cf_data_azone: "az3"
env_cf_data_build_image_id: "ami-f070abe6"
# cf_data_tag_key_layer AllowedValues: ["dmz", "web", "app", "data", "mgmt", "nat", "jump", "tools"]
env_cf_data_tag_key_layer: "data"
env_cf_data_instance_name: "bb-{{ env }}-{{ env_cf_data_tag_key_layer }}-{{ env_xcf_platform_version }}"
env_cf_data_database_type: "postgres"
env_cf_data_database_prefix: "bb_fe_"
# cf_data_tag_key_stack AllowedValues: ["dev", "test", "impl", "prod", "sbx", "tools"]
env_cf_data_tag_key_stack: "{{ env }}"
env_cf_data_key_name: "cms_bluebutton_fe_dev"
env_cf_data_instance_type: "m3.medium"
env_cf_data_pgsql_server_name: "{{ env_cf_data_tag_key_layer }}.{{ env }}.bluebutton.cms.fhirservice.net"
env_cf_data_pyapps_home: "/var/pyapps/{{ env_project_dir }}"
env_cf_data_pgsql_master: "{{ env_db_user_name }}"
env_cf_data_pyapps_email: "{{ env_cf_data_tag_key_layer }}.admin.{{ env }}@fhirservice.net"
env_cf_data_pgsql_password: "{{ vault_env_cf_data_pgsql_password }}"
# dev: vpc-80bdc3e7, impl: vpc-5fd4de38, test: vpc-5d5a163a, prod: vpc-9b3fc9fd
env_cf_data_vpc_id: "{{ env_cf_vpc_id }}"
env_cf_data_vol_size: 100
env_cf_data_vol_id: ""

env_cf_data_db_backup_key_id: "{{ vault_env_cf_data_db_backup_key_id }}"
env_cf_data_db_backup_secret_key: "{{ vault_env_cf_data_db_backup_secret_key }}"

# sg-ac1130d3: BB-SG-DEV-APPSERVER-ALLZONE
# sg-faa88985: BB-SG-TEST-APPSERVER-ALLZONE
# sg-96ac8de9: BB-SG-IMPL-APPSERVER-ALLZONE
# sg-e491b09b: BB-SG-PROD-APPSERVER-ALLZONE
env_cf_app_sg_app_zone_id: "sg-96ac8de9"
env_cf_app_azone: "az3"
env_cf_app_build_image_id: "ami-d8c7aecf}"
env_cf_app_tag_key_stack: "{{ env }}"
env_cf_app_tag_key_layer: "app"
env_cf_app_instance_name: "bb-{{ env }}-{{ env_cf_app_tag_key_layer }}-{{ env_cf_platform_version }}"
env_cf_app_key_name: "cms_bluebutton_fe_dev"
env_cf_app_instance_type: "m3.medium"
# "AllowedValues": ["LEADER" , "FOLLOW"]
env_cf_app_herd_member: "LEADER"
env_cf_app_public_server_name: "{{ env }}.bluebutton.cms.fhirservice.net"
env_cf_app_pyserver_name: "{{ env_cf_app_tag_key_layer }}-{{ env_cf_app_herd_member }}.{{ env }}.bluebutton.cms.fhirservice.net"
env_cf_app_py_virtual_env: "/var/virtualenv/{{ env_project_dir }}"
env_cf_app_pyapp_home: "/var/pyapps/{{ env_project_dir }}"
# "AllowedValues": ["settings.base", "settings.production", "settings.aws-dev",
#                   "settings.aws-test", "settings.dev", "settings.awstest", "settings.aws-impl"]
env_cf_app_pyapp_settings: "settings.aws-impl"

env_cf_app_repo_branch: "develop"
env_cf_app_pyapps_user: "pyapps"
env_cf_app_db_user: "{{ env_cf_data_pgsql_master }}"
env_cf_app_db_pwd: "{{ vault_env_cf_data_pgsql_password }}"
env_cf_app_pyapps_email: "{{ env }}-admin.fhirservice.net"
env_cf_app_pyapps_pwd: "{{ vault_env_cf_app_pyapps_pwd }}"
# "AllowedValues": ["postgres", "mysql"]
env_cf_app_db_type: "{{ env_cf_data_database_type }}"
env_cf_app_db_prefix: "{{ env_cf_data_database_prefix }}"

env_cf_app_aws_content_access_key: "{{ vault_env_cf_app_aws_content_access_key }}"
env_cf_app_aws_content_key_id: "{{ vault_env_cf_app_aws_content_key_id }}"

env_cf_app_target_vpc_id: "{{ env_cf_vpc_id }}"
# Application Logging Directory
env_cf_app_log_dir: "/var/log/pyapps"


# Service Monitoring Accounts
env_mon_nessus_user: "{{ vault_env_mon_nessus_user }}"
env_mon_nessus_pwd: "{{ vault_env_mon_nessus_pwd }}"




