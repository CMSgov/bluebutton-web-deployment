---

  ### Environment:
  env: "{{ env_env }}"

  ### DJANGO_SECRET_KEY:
  # 50 character Random Key
  # http://www.miniwebtool.com/django-secret-key-generator/
  django_secret_key: "{{ env_django_secret_key }}"

  # a unix path-friendly name (IE, no spaces or special characters)
  project_name: "{{ common_project_name }}"

  # Virtual Environment location
  venv_full: "{{ venv }}{{ common_project_dir }}"

  # git branch to deploy
  git_branch: "master"

  # the base path to install to. You should not need to change this.
  # git installs the repo in a folder beneath this path
  # files and folders excluded from the repository can be installed here
  # in files and folders alongside the repo.
  install_root: "{{ project_parent }}{{ common_project_dir }}"

  # the git repository URL for the project
  project_repo: "https://github.com/CMSgov/bluebutton-web-server.git"

  # the git repository URL for the deployment
  deployment_repo: "https://github.com/CMSgov/bluebutton-web-deployment.git"

  # DEBUG Mode
  # False in IMPL / PROD
  django_debug: "{{ env_django_debug }}"

  # application owner: pyapps
  app_owner: "pyapps"
  # application group: nginx
  app_group: "www-data"

  ### HOSTNAME_URL:
  host_url: "{{ env_external_dns_name }}"

  # django environment specific apps list
  django_environment_apps: "{{ env_django_environment_apps }}"
  django_optional_installed_apps: "{{ env_django_optional_installed_apps }}"
  django_cors_origin_allow_all: "{{ env_django_cors_origin_allow_all }}"

  ### Email configuration - AWS SES
  django_email_backend: "{{ env_django_email_backend }}"
  django_from_email: "{{ env_django_from_email }}"
  django_admin_email: "{{ env_django_admin_email }}"

  # SALT and ITERATIONS
  django_user_id_salt: "{{ env_django_user_id_salt }}"
  django_user_id_iterations: "{{ env_django_user_id_iterations }}"

  # django password hash iterations
  django_password_hash_iterations: "{{ env_django_password_hash_iterations }}"
  
  fhir_url: "{{ env_fhir_url }}"
  fhir_url_v3: "{{ env_fhir_url_v3 }}"
  
  # Default Sample FHIR ID
  django_default_sample_fhir_id: "{{ env_django_default_sample_fhir_id }}"

  django_fhir_certstore_relative: "{{ env_django_fhir_certstore_relative }}"

  django_signup_timeout_days: "{{ env_django_signup_timeout_days }}"

  ### S3 Bucket Settings:
  s3_storage_bucket_name: "{{ env_s3_storage_bucket_name }}"

  ### Django Settings:
  django_app_title: "{{ env_django_app_title }}"

  ### Application LOGO image settings:
  django_app_logo_size_max: "{{ env_django_app_logo_size_max }}"
  django_app_logo_width_max: "{{ env_django_app_logo_width_max }}"
  django_app_logo_height_max: "{{ env_django_app_logo_height_max }}"

  # Application label slugs to exclude from externally
  # published lists, like those used for internal use testing.
  django_app_list_exclude: "{{ env_django_app_list_exclude }}"

  # Add a variable endpoint for admin/
  # eg. To move from /admin/ to /secret/admin/
  #     set redirector to 'secret/'
  django_admin_redirector: "{{ env_django_admin_redirector }}"

  ### Database Settings:
  db_name: "{{ env_db_name }}"
  db_user_name: "{{ env_db_user_name }}"
  db_user_pw: "{{ env_db_user_pw }}"
  db_platform_type: "postgres"
  db_host_address: "db.bluebutton-{{ env }}.local"
  db_host_port: "15432"
  db_host_options: "?sslmode=require&options=-c role={{ env_db_role }}"

  # legacy value still used in roles, should be renamed for clarity
  cf_region: "{{ aws_region }}"

  # Nginx cert, key and fullchain files
  # Assigned Certificates and Keys to be copied to /etc/ssl/certs
  www_cert_file: "{{ env_www_cert_file }}"
  www_key_file: "{{ env_www_key_file }}"
  www_fullchain_file: "{{ env_www_fullchain_file }}"

  # AppServer cert and key for communication with FHIR Server
  app_fhir_cert: "{{ env_app_fhir_cert }}"
  app_fhir_key: "{{ env_app_fhir_key }}"
  app_fhir_cert_name: "{{ env_app_fhir_cert_name }}"
  app_fhir_key_name: "{{ env_app_fhir_key_name }}"

  # legacy values still used in roles, should be renamed for clarity
  cf_app_tag_key_layer: "{{ env_cf_app_tag_key_layer }}"
  cf_app_pyapps_pwd: "{{ env_cf_app_pyapps_pwd }}"

  mon_nessus_user: "{{ env_mon_nessus_user }}"
  mon_nessus_pwd: "{{ env_mon_nessus_pwd }}"
  mon_nessus_pub_key: "{{ env_mon_nessus_pub_key }}"

  # splunk configuration
  # Group name = BBAPI

  #
  # SLSx / Medicare.gov Authentication Integration
  #
  slsx_client_id: "{{ env_slsx_client_id }}"
  slsx_client_secret: "{{ env_slsx_client_secret }}"
  medicare_slsx_akamai_aca_token: "{{ env_medicare_slsx_akamai_aca_token }}"
  medicare_slsx_login_uri: "{{ env_medicare_slsx_login_uri }}"
  medicare_slsx_redirect_uri: "{{ env_medicare_slsx_redirect_uri }}"
  slsx_health_check_endpoint: "{{ env_slsx_health_check_endpoint }}"
  slsx_token_endpoint: "{{ env_slsx_token_endpoint }}"
  slsx_signout_endpoint: "{{ env_slsx_signout_endpoint }}"
  slsx_userinfo_endpoint: "{{ env_slsx_userinfo_endpoint }}"
  slsx_verify_ssl_internal: "{{ env_slsx_verify_ssl_internal }}"
  slsx_verify_ssl_external: "{{ env_slsx_verify_ssl_external }}"

  django_logging: "{{ env_django_logging }}"

  # new relic
  new_relic_license_key: "{{ env_new_relic_license_key }}"

  # SSH developer user/pub_key
  sshfile: "{{ env_sshfile }}"
