#!/bin/bash
##################################################
# Secure Postgres Backup
# v1.0.2 1/12/2017 @ekivemark
# v1.0.2: use export var for backup PG_TEMP_DIR
# v1.0.1: add PGPASSFILE and .pgpass
##################################################
# {{ role_db_data_dir }}/db_backup.sh
# Via template hhs_ansible/roles/postgres/templates/db_backup.sh.j2
# Source: s3://bb-config/all_env/db/db_backup.sh
# Parameter: hourly, daily, weekly, monthly
##################################################
NOW=$(date +"%Y%m%d_%H%M%S")
export PG_TEMP_DIR={{ role_db_temp_dir }}
export AWS_CONFIG_FILE=/root/.aws/config
DB_USER={{ cf_data_pgsql_master }}
PG_ENVIRONMENT={{ cf_data_tag_key_stack }}
DB_TABLE_NAME={{ role_db_table_name }}
# Get HOST_IP
# MAC_ADDR=`curl -s http://169.254.169.254/latest/meta-data/network/interfaces/macs/`
# HOST_IP=`curl -s http://169.254.169.254/latest/meta-data/network/interfaces/macs/$MAC_ADDR/local-ipv4s/`
HOST_IP={{ ansible_eth0.ipv4.address }}
PG_ACCESSPORT={{ common_db_type[cf_data_database_type]['DbHostPort'] }}
PG_DATA_DIR={{ role_db_data_dir }}

# export PGPASSWORD="R3s3t_Th1s"
export PGPASSFILE=$PG_DATA_DIR/.pgpass
# Get password from .pgpass file
echo "Postgres backup: $NOW $PG_ENVIRONMENT:$DB_TABLE_NAME on $HOST_IP:$PG_ACCESSPORT Mode:$1 for $DB_USER started:$NOW" >>$PG_TEMP_DIR/proc.log
echo "Postgres backup: $NOW $PG_ENVIRONMENT:$DB_TABLE_NAME on $HOST_IP:$PG_ACCESSPORT Mode:$1 for $DB_USER started:$NOW" >$PG_TEMP_DIR/latest.log
cd $PG_TEMP_DIR
/usr/pgsql-9.6/bin/pg_dump -U $DB_USER -h $HOST_IP -p {{ common_db_type[cf_data_database_type]['DbHostPort'] }} $DB_TABLE_NAME | /usr/bin/bzip2 | /usr/bin/openssl smime -encrypt -aes256 -binary -outform DEM -out $PG_TEMP_DIR/$DB_TABLE_NAME.$NOW.sql.bz2.ssl {{ /data/pgsql/9.6/data }}/{{ role_db_backup_pub_key }}
/usr/local/bin/aws s3 mv $PG_TEMP_DIR/$DB_TABLE_NAME.$NOW.sql.bz2.ssl s3://bb-dbback-$PG_ENVIRONMENT/$1/
NOW_ENDED=$(date +"%Y%m%d_%H%M%S")
echo "Postgres backup: $NOW $PG_ENVIRONMENT:$DB_TABLE_NAME on $HOST_IP:$PG_ACCESSPORT Mode:$1 for $DB_USER completed:$NOW_ENDED" >>$PG_TEMP_DIR/proc.log
echo "Postgres backup: $NOW $PG_ENVIRONMENT:$DB_TABLE_NAME on $HOST_IP:$PG_ACCESSPORT Mode:$1 for $DB_USER completed:$NOW_ENDED" >>$PG_TEMP_DIR/latest.log
