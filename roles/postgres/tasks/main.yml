---
# File: main 
# Created: 5/4/17
# Author: @ekivemark

- name: "Create pyapps user"
  become_user: root
  become: yes
  shell: "pass=$(perl -e 'print crypt($ARGV[0], 'password')' ${{ cf_data_pgsql_password }})"
  register: PgsqlPassword

- name: "Create user account"
  become_user: root
  become: yes
  user:
    name: pyapps
        password={{ PgslPassword }}
        state=present
        append=yes
        groups=sudo
        shell="/bin/bash"
  when: new_user_name is defined and new_user_name in uids
  register: user_created

#- name: "Add pyapps to Sudoers file"
#  become_user: root
#  shell: "echo 'pyapps       ALL=(ALL)       NOPASSWD: ALL' >/etc/sudoers.d/pyapps.conf"

- name: "Configure rhn for postgresql"
  become_user: root
  become: yes
  shell: "echo 'exclude=postgresql*' >>/etc/yum/pluginconf.d/rhnplugin.conf"

- name: "Update yum config-manager"
  become_user: root
  become: yes
  shell: "yum-config-manager --enable rhel-server-rhscl-6-rpms"

- name: "Update yum config-manager for optional RHEL channel"
  become_user: root
  become: yes
  shell: "yum-config-manager --enable rhel-6-server-optional-rpms"

#- name: "RPM Update - CentOS/RHEL 7"
#  become_user: root
#  shell: "rpm -Uvh https://yum.postgresql.org/9.6/redhat/rhel-7-x86_64/pgdg-centos96-9.6-3.noarch.rpm"

#- name: "RPM Update - CentOS/RHEL 6"
#  become_user: root
#  become: yes
#  shell: "rpm -Uvh https://yum.postgresql.org/9.6/redhat/rhel-6-x86_64/pgdg-redhat96-9.6-3.noarch.rpm"

- name: "Install Development Tools"
  become_user: root
  become: yes
  yum:
    name: '@Development Tools'
    state: latest

  # shell: "yum -y groupinstall 'Development Tools' "
  ####
  # Development Tools:
  # bison
  #byacc
  #cscope
  #ctags
  #cvs
  #diffstat
  #doxygen
  #flex
  #gcc
  #gcc-c++
  #gcc-gfortran
  #gettext
  #git
  #indent
  #intltool
  #libtool
  #patch
  #patchutils
  #rcs
  #redhat-rpm-config
  #rpm-build
  #subversion
  #swig
  #systemtap
  ####

- name: "Install Postgresql components"
  become_user: root
  become: yes
  yum:
    pkg: "{{item}}"
    state: installed
  with_items:
   # - https://yum.postgresql.org/9.6/redhat/rhel-6-x86_64/pgdg-redhat96-9.6-3.noarch.rpm
   - https://download.postgresql.org/pub/repos/yum/9.6/redhat/rhel-6-x86_64/pgdg-redhat96-9.6-3.noarch.rpm
   - postgresql96-server
   - https://download.postgresql.org/pub/repos/yum/9.6/redhat/rhel-6-x86_64/postgresql96-contrib-9.6.2-2PGDG.rhel6.x86_64.rpm
   - http://mirror.centos.org/centos/6/os/x86_64/Packages/libffi-devel-3.0.5-3.2.el6.x86_64.rpm
   - libxml2-devel
   - libxslt-devel
   # - gcc
   # - gcc-c++
   # - git
   - httpd-devel
   - zlib-devel
   - bzip2-devel
   - openssl-devel
   - ncurses-devel
   - sqlite-devel
   - readline-devel
   - tk-devel
   - gdbm-devel
   - db4-devel
   - libpcap-devel
   - xz-devel
   - python-devel
   - postgresql-devel
   - libffi.x86_64
   - python-cffi
   - python-psycopg2.x86_64

- name: "Create Postgres data directory"
  file:
    dest: "{{ role_db_data_dir }}"
    owner: "{{ role_db_user }}"
    group: "{{ role_db_user }}"
    recurse: yes

- name: "Create Postgres temp directory"
  file:
    dest: "{{ role_db_temp_dir }}"
    owner: "{{ role_db_user }}"
    group: "{{ role_db_user }}"
    recurse: yes

# Startup script: /etc/init.d/postgresql-9.6
# Default data location: /var/lib/postgresql/[version]/data/
- name: "Change default PGDATA variable in startup script"
  become_user: root
  become: yes
  lineinfile:
    dest: "/etc/init.d/postgresql-9.6"
    regexp: "^PGDATA="
    line: "PGDATA={{ role_db_data_dir }}"

# Switch from default port 5432.
- name: "Setup Database port"
#########
  become_user: root
  become: yes
  lineinfile:
    dest: "{ role_db_data_dir }}/postgresql.conf"
    owner: "{{ role_db_user }}"
    group: "{{ role_db_user }}"
    regex: "^port = 5432"
    line: "port = {{ common_db_type[cf_data_database_type]['DbHostPort'] }}"
    backup: yes

- name: "Initialize Database Service"
  become_user: root
  shell: "service postgresql-9.6 initdb"

- name: "Set database to start on OS Boot"
  become_user: root
  shell: "chkconfig postgresql-9.6 on"

- name: "Set postgresql to listen on ip addresses"
  become_user: root
  lineinfile:
    dest: "{{ role_db_data_dir }}/postgresql.conf"
    owner: "{{ role_db_user }}"
    group: "{{ role_db_user }}"
    line: "\n#-------------------------------\n# LISTEN ON EXTERNAL PORTS\n#-------------------------------\nlisten_addresses = '*'\n"
    state: present

- name: "Update pg_hba.conf"
  become_user: root
  become: yes
  lineinfile:
    owner: "{{ role_db_user }}"
    group: "{{ role_db_user }}"
    dest: "{{ role_db_data_dir }}/pg_hba.conf"
    line: "\n#-------------------------------\n# LISTEN ON EXTERNAL PORTS\n#-------------------------------\n"

- name: "Update pg_hba.conf with this subnet address"
  become_user: root
  become: yes
  lineinfile:
    owner: "{{ role_db_user }}"
    group: "{{ role_db_user }}"
    dest: "{{ role_db_data_dir }}/pg_hba.conf"
    line: "host    all    all    {{ common_cf_layer[env_az][env_cf_data_tag_key_layer] }}    password "

- name: "Update pg_hba.conf with app layer address"
  become_user: root
  become: yes
  lineinfile:
    owner: "{{ role_db_user }}"
    group: "{{ role_db_user }}"
    dest: "{{ role_db_data_dir }}/pg_hba.conf"
    line: "host    all    all    {{ common_cf_layer[env_az]['app'] }}    password "

- name: "Start Database"
  become_user: root
  become: yes
  shell: "service postgresql-9.6 start"

- name: "Create db init sql script"
  template:
    src: db_init_script.j2
    dest: "{{ role_db_data_dir }}/django_init.sql"
    backup: yes
    owner: "{{ role_db_user }}"
    group: "{{ role_db_user }}"
    mode: "u+rwx"

- name: "Run db init sql script"
  become_user: "{{ role_db_user}}"
  become: yes
  shell: "psql -f {{ role_db_data_dir }}/django_init.sql"
  register: django_db_init

- name: "Setup /etc/ld.so.conf"
  become_user: root
  become: yes
  shell: "echo '/usr/local/lib' >>/etc/ld.so.conf"


- name: "Tidying up by setting ownership for ec2-user"
  become_user: root
  become: yes
  file:
    dest: "/home/ec2-user"
    owner: ec2-user
    group: ec2-user
    mode: 0775
    recurse: yes