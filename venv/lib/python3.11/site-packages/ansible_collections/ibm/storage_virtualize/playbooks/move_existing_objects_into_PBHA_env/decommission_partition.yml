---
- name: Remove existing objects (volumegroup and host) from a partition and decommission partition
  hosts: localhost
  gather_facts: false
  connection: local
  vars_files:
    - inventory.ini
  tasks:
    - name: Convert a HA partition to non-HA partition (by removing ha_replication-policy); This stops data-sync.
      ibm.storage_virtualize.ibm_sv_manage_storage_partition:
        clustername: "{{ ams_cluster_ip }}"
        username: "{{ ams_cluster_username }}"
        password: "{{ ams_cluster_password }}"
        log_path: "{{ log_path | default('ansiblePB.log') }}"
        name: "{{ partition_name }}"
        state: present
        noreplicationpolicy: true

    - name: Get info about volumegroups that are in partition
      register: volgrps_info
      ibm.storage_virtualize.ibm_svc_info:
        clustername: "{{ ams_cluster_ip }}"
        username: "{{ ams_cluster_username }}"
        password: "{{ ams_cluster_password }}"
        log_path: "{{ log_path | default('ansiblePB.log') }}"
        gather_subset: ['volumegroup']
        filtervalue: "partition_name={{ partition_name }}"

    - name: Get list of volumegroups that are in partition
      ansible.builtin.set_fact:
        volumegroup_list: "{{ volgrps_info.VolumeGroup | map(attribute='name') | list }}"

    - name: Debug message if no volume groups to process
      ansible.builtin.debug:
        msg: "No volume groups found to remove from partition."
      when: volumegroup_list | length == 0

    - name: Get list of hosts that are still in partition (hosts with no mappings)
      register: hosts_info
      ibm.storage_virtualize.ibm_svc_info:
        clustername: "{{ ams_cluster_ip }}"
        username: "{{ ams_cluster_username }}"
        password: "{{ ams_cluster_password }}"
        log_path: "{{ log_path | default('ansiblePB.log') }}"
        gather_subset: ['host']
        filtervalue: "partition_name={{ partition_name }}"

    - name: Get list of hosts that are in partition
      ansible.builtin.set_fact:
        host_list: "{{ hosts_info.Host | map(attribute='name') | list }}"

    - name: Delete partition
      ibm.storage_virtualize.ibm_sv_manage_storage_partition:
        clustername: "{{ ams_cluster_ip }}"
        username: "{{ ams_cluster_username }}"
        password: "{{ ams_cluster_password }}"
        log_path: "{{ log_path | default('ansiblePB.log') }}"
        name: "{{ partition_name }}"
        state: absent

    - name: Delete volume groups, keeping volumes which were associated with volumegroup
      ibm.storage_virtualize.ibm_svc_manage_volumegroup:
        clustername: "{{ ams_cluster_ip }}"
        username: "{{ ams_cluster_username }}"
        password: "{{ ams_cluster_password }}"
        log_path: "{{ log_path | default('ansiblePB.log') }}"
        name: "{{ item }}"
        state: absent
        evictvolumes: true
      loop: "{{ volumegroup_list }}"
      when:
        - volumegroup_list | length > 0
        - not keep_volumegroups | default(true)
