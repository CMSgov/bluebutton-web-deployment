---
# File: playbook/appherd/roles/app_update/tasks/main.yml
# Created: 5/10/17
# last modified: 11/27/17
# Author: '@ekivemark'
# Create the application environment


- name: "Create Virtualenv"
  become_user: root
  become: yes
  # Python3.6 replaces pyvenv-(ver) with python3.6 -m venv
  # shell: "cd /var/virtualenv ;{{ python_bin_dir }}/pyvenv-{{ python_ver }} hhs_o_server "
  shell: "cd /var/virtualenv ; {{ python_bin_dir }}/python{{ python_ver }} -m  venv {{ project_dir }} "

- name: "Set permissions to application code"
  become_user: root
  become: yes
  file:
    dest: "{{ cf_app_pyapp_home }}"
    state: directory
    recurse: yes
    owner: "{{ cf_app_pyapps_user }}"
    group: "{{ app_group }}"
    mode: 0755


- name: "Set ownership to pyapps:apache ({{ cf_app_pyapps_user }}:{{ app_group }})"
  become_user: root
  become: yes
  file:
    owner: "{{ cf_app_pyapps_user }}"
    group: "{{ app_group }}"
    dest: "/var/virtualenv"
    state: directory
    recurse: yes

########################################
- name: "Check for git installation"
  become_user: root
  become: yes
  stat:
    path: "{{ install_root }}/{{ project_name }}/.git/*"
  register: git_installed

- name: "Check result of git check"
  debug:
    msg: "git is installed [{{ git_installed.stat.exists }}]"
  ignore_errors: yes

- name: "install from git: {{ project_repo }} branch:{{ git_branch }}"
  become_user: root
  become: yes
  git:
    repo: "{{ project_repo }}"
    dest: "{{ install_root }}/{{ project_name }}"
    force: yes
    clone: yes
  when: not git_installed.stat.exists

  # Now pull a specific branch
- name: "update from git: {{ project_repo }} branch:{{ git_branch }} to {{ env }}"
  become_user: root
  become: yes
  git:
    repo: "{{ project_repo }}"
    dest: "{{ install_root }}/{{ project_name }}"
    version: "{{ git_branch }}"

- name: "Set permissions to application code ( {{ cf_app_pyapps_user }}:{{ app_group }} )"
  become_user: root
  become: yes
  file:
    dest: "{{ cf_app_pyapp_home }}"
    state: directory
    recurse: yes
    owner: "{{ cf_app_pyapps_user }}"
    group: "{{ app_group }}"
    mode: 0755

- name: "pip and basic update"
  become_user: root
  become: yes
  shell: |
    cd {{ cf_app_pyapp_home }}/{{ common_project_name }}
    source {{ cf_app_py_virtual_env }}/bin/activate
    export PATH={{ cf_app_py_virtual_env }}/bin:$PATH
    {{ cf_app_py_virtual_env }}/bin/pip{{ python_ver }} {{ item }}
  with_items:
    - "install --upgrade pip {{ pip_extra_args }} "
    - "install psycopg2 {{ pip_extra_args }} --allow-external psycopg2 "
    - "install -r {{ cf_app_pyapp_home }}/{{ common_project_name }}/requirements/requirements.txt {{ pip_extra_args }} "

# Relative reference from playbook/appserver
- include: ./../appherd/roles/create_certstore/tasks/main.yml

# app_lb_app_protocol is https or http.
# If using https copy https.j2 templates,
# otherwise copy http.j2 templates to apache conf.d folder

- name: "get last octet of appserver ip address"
  shell: "export last_ip_octet=$(/usr/sbin/ip route get 8.8.8.8 | /usr/bin/awk -F. '{print $NF;exit}') ; echo $last_ip_octet "
  register: app_ip_last_octet

- name: "octect number"
  debug:
    msg: "app_ip_last_octet ={{ app_ip_last_octet.stdout }}"


# app_ip_last_octet is used in apache conf files.
# Change conf file names to enable load in order
# Apache loads alphabetically. use bb_nn_ prefix to force load sequence
- name: "Create Virtualhosts file"
  become_user: root
  become: yes
  template:
    src: "../templates/{{ item }}.{{ app_lb_app_protocol|lower }}.j2"
    dest: "/etc/httpd/conf.d/{{ item }}"
    owner: root
    group: root
    mode: "0644"
  with_items:
    - bb_01_virtualhost.conf
    - bb_02_ssl.conf
    - ssl.conf
    # ssl.conf is an empty file to avoid yum update re-installing ssl.conf

# change ownership of files
- name: "Update file ownership"
  become_user: root
  become: yes
  file:
    path: "{{ install_root }}/{{ project_name }}/"
    recurse: yes
    owner: "{{ app_owner }}"
    group: "{{ app_group }}"
    mode:  "u+rw,g+rw,o-rwx"

# Change ownership for libraries
- name: "Change ownership for libraries"
  become_user: root
  become: yes
  file:
    path: "{{ venv }}"
    recurse: yes
    owner: "{{ app_owner }}"
    group: "{{ app_group }}"
    mode:  "u+rw,g+rw,o-rwx"

- name: make manage.py executable
  become_user: root
  become: yes
  file:
    path: "{{ install_root }}/{{ project_name }}/manage.py"
    state: touch
    mode: "u+rwx,g+rwx,o-rwx"

#####
## Add the create variable files here before running Migrate and Collectstatic
## Break Migrate and collectstatic out to separate role: django_prep
#####
