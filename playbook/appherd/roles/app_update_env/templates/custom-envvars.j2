import os
import sys

####################################
### custom-envvars.py
### {{ db_platform_type }}
####################################

def no_overwrite(env_var, env_val):
    """ Do not overwrite ENV VAR if it exists """
    check_for = os.environ.get(env_var)
    if check_for:
        # print("%s already set" % env_var)
        return
    else:
        # Not set
        os.environ.setdefault(env_var, env_val)
        # print("%s set to %s" % (env_var, env_val))
    return


# If sys.path.append does not point to the application home directory Apache will not find the settings
no_overwrite('DJANGO_APP_ROOT', '{{ install_root }}/{{ project_name }}')
sys.path.append(os.environ.get('DJANGO_APP_ROOT'))

# http://www.miniwebtool.com/django-secret-key-generator/
no_overwrite('DJANGO_SECRET_KEY', '{{ django_secret_key }}')
no_overwrite('DJANGO_SETTINGS_MODULE', '{{ django_settings_module }}')
no_overwrite('DJANGO_ASSETS_ROOT', "{{ install_root }}/{{ project_name }}")
no_overwrite('THS_FHIR_SERVER', '{{ ths_fhir_server }}')
no_overwrite('THS_FHIR_PATH', '{{ ths_fhir_path }}')
no_overwrite('THS_FHIR_RELEASE', '{{ ths_fhir_rel }}')
no_overwrite('THS_FHIR_REWRITE_FROM', '["{{ ths_fhir_server }}{{ ths_fhir_path }}{{ ths_fhir_rel }}",]')
no_overwrite('THS_FHIR_REWRITE_TO', '{{ ths_fhir_rewrite_to }}')
no_overwrite('DJANGO_SLS_USER', 'ben')
no_overwrite('DJANGO_SLS_PASSWORD', 'pbkdf2_sha256$24000$V6XjGqYYNGY7$13tFC13aaTohxBgP2W3glTBz6PSbQN4l6HmUtxQrUys=')
no_overwrite('DJANGO_SLS_FIRST_NAME', 'Ben')
no_overwrite('DJANGO_SLS_LAST_NAME', 'Barker')
no_overwrite('DJANGO_SLS_EMAIL', 'ben@example.com')
no_overwrite('HOSTNAME_URL', '{{ host_url }}')
# email backend options are:
# 'django.core.mail.backends.smtp.EmailBackend'
# 'django.core.mail.backends.filebased.EmailBackend'
# 'django.core.mail.backends.locmem.EmailBackend'
# 'django.core.mail.backends.dummy.EmailBackend'
# 'django_ses.SESBackend'
# Set REPLACE setting to one of the options listed above
no_overwrite('DJANGO_EMAIL_BACKEND', '{{ django_email_backend }}')
no_overwrite('DJANGO_REGION_SES_NAME', '{{ django_email_region }}')
no_overwrite('DJANGO_REGION_SES_ENDPOINT', '{{ django_email_ses_endpoint }}')
no_overwrite('DJANGO_FROM_EMAIL', '{{ django_from_email }}')
no_overwrite('DJANGO_ADMIN_EMAIL', '{{ django_admin_email }}')

# SALT and ITERATIONS
no_overwrite('DJANGO_USER_ID_SALT', '{{ django_user_id_salt }}')
no_overwrite('DJANGO_USER_ID_ITERATIONS', '{{ django_user_id_iterations }}')


# AWS SETTINGS - account: {{ s3_bucket_account }}
no_overwrite('AWS_ACCESS_KEY_ID', '{{ aws_access_id }}')
no_overwrite('AWS_SECRET_ACCESS_KEY', '{{ aws_secret_key }}')
no_overwrite('AWS_STORAGE_BUCKET_NAME', '{{ s3_storage_bucket_name }}')

# Organization and Application Info
no_overwrite('DJANGO_ORGANIZATION_NAME', '{{ django_org_name }}')
no_overwrite('DJANGO_APPLICATION_TITLE', '{{ django_app_title }}')

# admin prepend url
no_overwrite('DJANGO_ADMIN_PREPEND_URL', '{{ django_admin_redirector }}')

# Database Settings - postgres - Start
# postgres://USER:PASSWORD@HOST:PORT/NAME
no_overwrite('RDS_DB_PLATFORM', '{{ db_platform_type }}')
no_overwrite('RDS_DB_ENGINE', '{{ db_engine_driver }}')
no_overwrite('RDS_DB_NAME', '{{ db_name }}')
no_overwrite('RDS_USERNAME', '{{ db_user_name }}')
no_overwrite('RDS_PASSWORD', '{{ db_user_pw }}')
no_overwrite('RDS_HOSTNAME', '{{ db_host_address }}')
no_overwrite('RDS_PORT', '{{ db_host_port }}')

# Pass options in a url query string
# e.g. '?key1=value1&key2=value2'
no_overwrite('RDS_DB_OPTIONS', '{{ db_host_options }}')

DEFAULT_DB_SET = "{{ db_platform_type }}://"
DEFAULT_DB_SET += os.environ.get('RDS_USERNAME')  + ":"+ os.environ.get('RDS_PASSWORD') + "@"
DEFAULT_DB_SET += os.environ.get('RDS_HOSTNAME') + ":" + os.environ.get('RDS_PORT') + "/"
DEFAULT_DB_SET += os.environ.get('RDS_DB_NAME')

# Switch ssl on
DEFAULT_DB_SET += os.environ.get('RDS_DB_OPTIONS')


# print("DEFAULT_DB_SET=%s" % DEFAULT_DB_SET)

# Using dj_database_url in settings
no_overwrite('DATABASES_CUSTOM', "%s" % DEFAULT_DB_SET)

#
# MyMedicare Authentication Integration
#

SLS_TOKEN_ENDPOINT = 'https://dev.accounts.cms.gov/v1/oauth/token'
MEDICARE_LOGIN_URI = 'https://dev2.account.mymedicare.gov/?scope=openid%20profile&client_id=bluebutton'
MEDICARE_REDIRECT_URI = 'http://localhost:8000/mymedicare/sls-callback'
MEDICARE_LOGIN_TEMPLATE_NAME = 'design_system/login.html'
AUTHORIZATION_TEMPLATE_NAME = 'design_system/authorize.html'
SLS_VERIFY_SSL = False




# Enable next line to confirm DEFAULT_DB_SET
# print("Default DB:%s" % DEFAULT_DB_SET)

# Enable next line to check settings for Database
# print("Database Settings:%s" % os.environ.get('DATABASES_CUSTOM'))

# Use this format to define an Environment Variable and the value to assign to it.
# no_overwrite('', '')

# Uncomment the next line if you want to prove that this file is being run as part of wsgi.py
# print("Variables set for server:%s" % os.environ.get('HOSTNAME_URL'))