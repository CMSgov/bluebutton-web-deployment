---
# File: platform/nessus_update.yml
# Created: 5/2/17
# update the nessus_service user account
# Scope: All Environment Servers
# Purpose: nessus_service account has a password update every 60 days.
# This playbook can change the password using an encrypted variable
#
# The user and password is defined in vars/all_vars.yml
# which looks up values in vars/env/{{ env }}/env.yml
# which looks up encrypted values in vault/env/{{ env }}/vault.yml

- hosts: all
  vars:
    env: "dev"

  # env value is passed in from command line using
  #   --extra-vars env=dev | test | impl | prod
  # Vars file is relative to playbook file
  # Sequence:
  # 1. Common variables
  # 2. encrypted vault file
  # 3. environment specific variables
  # 4. all_vars which reference the preceding three files.
  # common_ prefixes common variables
  # vault_env_ prefixes encrypted variables
  # env_ prefixes environment specific variables
  # all_var incorporates preceding variables and defines variables without prefixes.
  # use all_var variables in scripts.
  vars_files:
    - "./../../vars/common.yml"
    - "./../../vault/env/{{ env }}/vault.yml"
    - "./../../vars/env/{{ env }}/env.yml"
    - "./../../vars/all_var.yml"
    # - ../vars/all_vars.yml
    # - ../../vars/playbook/template_envvars.yml

  remote_user: "{{ remote_user_account }}"
  become: yes
  become_user: "{{ mon_nessus_user }}"

  tasks:
  - name: "Create the .ssh folder for {{ mon_nessus_user }}"
    file:
      dest: "/home/{{ mon_nessus_user }}/.ssh"
      mode: "0700"
      owner: "{{ mon_nessus_user }}"
      group: "{{ mon_nessus_user }}"
      state: directory

  - name: "Create/touch the .ssh/authorized_keys file"
    file:
      dest: "/home/{{ mon_nessus_user }}/.ssh/authorized_keys"
      mode: "0600"
      owner: "{{ mon_nessus_user }}"
      group: "{{ mon_nessus_user }}"
      state: touch

  - name: "Add the public key to authorized_keys"
    lineinfile:
      dest: "/home/{{ mon_nessus_user }}/.ssh/authorized_keys"
      insert_after: EOF
      mode: "0600"
      owner: "{{ mon_nessus_user }}"
      group: "{{ mon_nessus_user }}"
      line: "{{ mon_nessus_pub_key }}"
      backup: yes

  - name: "Check the authorized_keys file"
    shell: "cat /home/{{ mon_nessus_user }}/.ssh/authorized_keys"
    register: auth_keys_out

  - name: "authorized_keys result"
    debug:
      msg: "{{ auth_keys_out.stdout.split('\n') }}"

# Apply public key to ssh config for more secure access by nessus_service account

#  - name: "change {{ mon_nessus_user }} password"
#    user: "name={{ mon_nessus_user }} update_password=always password={{ mon_nessus_pwd }}"
#
#  - name: "update PasswordAuthentication block in /etc/ssh/sshd_config"
#    blockinfile:
#      path: /etc/ssh/sshd_config
#      block: |
#        # monitoring network password access
#        Match address 10.128.11.0/24
#          PasswordAuthentication yes
#        Match address 10.128.111.0/24
#          PasswordAuthentication yes
#
