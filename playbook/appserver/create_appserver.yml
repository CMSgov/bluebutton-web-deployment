---
# File: create_appserver.yml
# Created: 5/09/17

# Playbook to:
#  - create Python3/Django AppServer

# Based on: http://odecee.com.au/cloudformation-and-ansible/
# Vars file is relative to playbook file
# vars_files:
# Vars file is relative to playbook file
# Sequence:
# 1. Common variables
# 2. encrypted vault file
# 3. environment specific variables
# 4. all_vars which reference the preceding three files.
# common_ prefixes common variables
# vault_env_ prefixes encrypted variables
# env_ prefixes environment specific variables
# all_var incorporates preceding variables and defines variables without prefixes.
# use all_var variables in scripts.

- name: Provision Appserver
  hosts: localhost
  connection: local
  # gather_facts: False
  vars:
    env: "dev"
    azone: "az1"
    sub_zone: "app"
    sg_zone: "appserver"
    env_az: "{{ env }}-{{ azone }}"
    env_cf_data_version: "20"
    splunk_client_name: "BBAPI-{{ env|upper }}-APP"
    ami_release: "2017-05-11"
  vars_files:
    - "./../../vars/common.yml"
    - "./../../vault/env/{{ env }}/vault.yml"
    - "./../../vars/env/{{ env }}/env.yml"
    - "./../../vars/all_var.yml"
    # - "./../../var/{{ env }}-{{ sub_zone }}-ami-{{ ami_release }}.yml"

  tasks:
  - name: "launch Base Server to build appserver"
    ec2:
      # connection: local
      # gather_facts: False
      # tags: provisioning
      # Necessary Variables for creating/provisioning the EC2 Instance
      #vars:
      # Adding instance_id list to see if only one server is created.
      # instance_ids: ["i-028b8fcc6eaf54779"]
      instance_type: "{{ cf_app_instance_type }}"
      # security_group:
      group: "BB-SG-{{ env|upper }}-{{ sg_zone|upper }}-ALLZONE" # Change the security group name here
      # This image should be updated monthly.
      # Current version is: EAST-RH 7-3 Gold Image V.1.09 (HVM) 04-21-2017 - ami-fdde41eb
      # EAST-RH 6-9 Gold Image V.1.01 (PV) 04-21-17 - ami-3dda452b
      # EAST-RH 6-8 Gold Image V.3.17 (PV)Splunk-CFN-FIPS140-02-24-17 (ami-f070abe6)
      # EAST-RH 7-3 Gold Image V.1.10 (HVM) 05-18-17 - ami-3aff872c
      image: "ami-3aff872c" # Change the AMI, from which you want to launch the server

      key_name: "{{ cf_app_key_name }}" # Change the keypair name
      region: "{{ cf_region }}"
      # tenancy must be "dedicated"
      tenancy: "dedicated"
      # DEV AZ1 DATA
      vpc_subnet_id: "{{ common_cf_subnet[env_az][env_cf_app_tag_key_layer] }}"  # "subnet-80ecfbaa"
      count: 1
      # state: present
      termination_protection: no
      # tags to instance_tags
      # Wait for desired state
      wait: yes
      wait_timeout: 500
      instance_tags:
        Name: "bb-{{ env }}-{{ cf_app_azone }}-{{ env_cf_app_tag_key_layer }}-{{ cf_platform_version }}"
        Stack: "BB-{{ env|upper }}-{{ cf_app_azone|upper }}-{{ cf_app_tag_key_layer|upper }}-ANSIBLE"
        Business: "{{ cf_tags_business }}"
        Application: "{{ cf_tags_application }}"
        Environment: "{{ env|upper }}"
        Function: "{{ cf_app_tag_key_layer }}-AppServer"
        Layer:  "{{ cf_data_tag_key_layer|upper }}"
        ami_name: "BB-{{ env|upper }}-{{ cf_app_tag_key_layer|upper }}"
        region: "{{ cf_region }}"
        Managed: "BB-MANAGED-{{ env|upper }}"
    register: app_ec2_output

  - name: waiting for ssh to start
    wait_for:
      port: 22
      host: "{{ app_ec2_output.instances[0]['private_ip'] }}"
      timeout: 300
      search_regex: OpenSSH

  - name: add host to group
    add_host:
      name: "{{ app_ec2_output.instances[0]['private_ip'] }}"
      groups: "just_created"

  - name: "add private_ip to /etc/ansible/hosts"
    lineinfile:
      dest: "/etc/ansible/hosts"
      regexp: '\[appservers\]'
      line: "[appservers]\n{{ app_ec2_output.instances[0]['private_ip'] }}"
      backup: yes

