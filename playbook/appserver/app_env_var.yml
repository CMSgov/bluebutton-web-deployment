---
# File: app_env_var.yml 
# Created: 3/17/17
# Scope: Django AppServers
# Purpose: Environment Variables for the Appservers are set in
# a bash script and python script in the parent folder of the
# application.
#
# This playbook will use templates to update the files:
# - django_settings.sh
# - custom-envvars.py
# These files are stored in the parent directory above the application.
#
#
# Apply to all app servers (prime, leader, follower)
- hosts: app_prime_server,app_lead_server,app_follow_server
  vars:
    env: "dev"

  # Vars file is relative to playbook file
  # Sequence:
  # 1. Common variables
  # 2. encrypted vault file
  # 3. environment specific variables
  # 4. all_vars which reference the preceding three files.
  # common_ prefixes common variables
  # vault_env_ prefixes encrypted variables
  # env_ prefixes environment specific variables
  # all_var incorporates preceding variables and defines variables without prefixes.
  # use all_var variables in scripts.
  vars_files:
    - "./../../vars/common.yml"
    - "./../../vault/env/{{ env }}/vault.yml"
    - "./../../vars/env/{{ env }}/env.yml"
    - "./../../vars/all_var.yml"
    # - ../vars/all_vars.yml
    # - ../../vars/playbook/template_envvars.yml

  remote_user: "{{ remote_user_account }}"
  become: yes
  become_user: root

  tasks:
#  - name: Get custom-envar content.
#    become: yes
#    become_method: sudo
#    become_user: root
#    command: cat /var/pyapps/hhs_o_server/custom-envvars.py
#    register: c_e_data
#
#  - debug:
#      msg: "{{ c_e_data.stdout }}"

  - template:
      src: ../../templates/appserver/custom-envvars.j2
      dest: "{{ install_root }}/custom-envvars.py"
      backup: yes
      owner: "{{ app_owner }}"
      group: "{{ app_group }}"
      mode: 0644

#  - name: Get new custom-envar content.
#    command: cat /var/pyapps/hhs_o_server/custom-envvars.py
#    register: c_e_new_data
#
#  - debug:
#      msg: "{{ c_e_new_data.stdout }}"

  - template:
      src: ../../templates/appserver/django_settings.j2
      dest: "{{ install_root }}/django_settings.sh"
      backup: yes
      owner: "{{ app_owner }}"
      group: "{{ app_group }}"
      mode: 0644

#  - name: Get new django_settings content.
#    become: yes
#    become_method: sudo
#    become_user: root
#    command: cat /var/pyapps/hhs_o_server/django_settings.sh
#    register: d_j_new_data
#
#  - debug:
#      msg: "{{ d_j_new_data.stdout }}"

#  - file:
#    path: /var/pyapps/hhs_o_server/django_settings.sh
#    owner: "{{ app_owner }}"
#    group: "{{ app_group }}"
#    mode: 0644

  - name: display custom_env_vars.py
    action: "shell /bin/cat {{ install_root }}/custom-envvars.py"

  - name: display django_settings.sh
    action: "shell /bin/cat {{ install_root }}/django_settings.sh"

  - name: make sure apache server is running
    service: name=httpd state=started enabled=yes

  - name: "Restart Apache on {{ env_env }}"
    action: shell /bin/echo $HOSTNAME
    notify:
      - restart apache

  handlers:
  - name: restart apache
    service: name=httpd state=restarted

# vim:ff=unix ts=2 sw=2 ai expandtab ft=ansible





