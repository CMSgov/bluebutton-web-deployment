---
# File: build_fips140_database.yml
# Created: 5/4/17
# Author: @ekivemark

- name: Provision Database Server
  hosts: dbservers
  connection: smart
  gather_facts: False
  user: ec2-user
  become_user: root
  become: yes
  become_method: sudo
  vars:
    env: "dev"
    env_az: "{{ env }}-az1"
    splunk_client_name: "BB-{{ env }}-DATA"

  vars_files:
    - "./../../vars/common.yml"
    - "./../../vault/env/{{ env }}/vault.yml"
    - "./../../vars/env/{{ env }}/env.yml"
    - "./../../vars/all_var.yml"

  roles:
    - ../../roles/base_patch
#    - ../../roles/splunk

  tasks:
  - name: "pinging..."
    ping:

#  - name: "patch sudoers file"
#    become_user: root
#    vars:
#      ansible_ssh_pipelining: no
#    lineinfile:
#      path: /etc/sudoers
#      line: 'Defaults   requiretty'
#      state: absent

#    - name: "upgrade all packages"
#      yum:
#        name: "*"
#        state: latest
#
#    - name: Check for reboot hint.
#      shell: LAST_KERNEL=$(rpm -q --last kernel | perl -pe 's/^kernel-(\S+).*/$1/' | head -1); CURRENT_KERNEL=$(uname -r); if [ $LAST_KERNEL != $CURRENT_KERNEL ]; then echo 'reboot'; else echo 'no'; fi
#      ignore_errors: true
#      register: reboot_hint
#
#    - name: Check result
#      debug:
#    - name: "Rebooting ..."
#      command: shutdown -r now "Reboot required for updated kernel"
#      async: 0
#      poll: 0
#      become_user: root
#      ignore_errors: true
#      when: reboot_hint.stdout.find("reboot") != -1
#      register: rebooting
#
#    - name: "Wait for thing to reboot..."
#      pause: seconds=45
#      when: rebooting|changed


