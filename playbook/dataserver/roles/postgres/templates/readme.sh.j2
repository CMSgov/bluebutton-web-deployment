#!/bin/bash
##################################################
# Postgres Datbase Restore Instructions
# v1.0.0 6/22/2017 @ekivemark
#################################################
# /data/pgbackup/restore/readme.sh
# Via template hhs_ansible/roles/postgres/templates/readme.sh.j2
# Parameter:
#################################################

echo "##########################################"
echo "# POSTGRES Database RESTORE instructions  "
echo "# Tread carefully                         "
echo "# Edit /data/pgbackup/restore/re_init_script.sql"
echo "# "
echo "# su - postgres"
echo "# run psql to initialize the database     "
echo "# /usr/bin/psql -p {{ db_host_port }} -f /data/pgbackup/restore/re_init_script.sql "
echo "# "
echo "# Now do the restore steps                 "
echo "# Copy the relevant bz2.ssl file from S3   "
echo "# set permissions to the postgres user.     "
echo "# eg. "
echo "# /usr/local/bin/aws s3 cp s3://bb-dbback-dev/hourly/bb_fe_dev_pg_01.hourly_20170621_140001.sql.bz2.ssl . "
echo "# Next unpack the encrypted and compressed backup file "
echo "# "
echo "cd /data/pgbackup/restore "
echo "./unpack.sh { filename to restore from } "
echo "# "
echo "# A successful restore will leave a file named 'workfile' in the restore directory "
echo "# set ownership of workfile to postgres user. "
echo "# "
echo "# RESTORE THE WORKFILE. This is a pg_dump output file."
echo "# We restore this to the initialized database         "
echo "# su - postgres "
echo "# /usr/bin/psql -p {{ db_host_port }} -f /data/pgbackup/restore/workfile "
echo "# "
echo "# If the database table has changed use Ansible to refresh the AppServer code"
echo "# this will re-create the variable settings. Make sure the database table name "
echo "# and username and password in the appserver settings match the parameters used in "
echo "# the the /data/pgbackup/restore/re_init_script.sql file. "
echo " "

